<Window x:Class="Fischless.Design.Controls.MessageBoxWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonia="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Fischless.Design.Controls"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="{Binding ContentTitle}"
        Width="{Binding Width}"
        Height="{Binding Height}"
        MinHeight="{Binding MinHeight}"
        MaxWidth="{Binding MaxWidth}"
        MaxHeight="{Binding MaxHeight}"
        d:DesignHeight="450"
        d:DesignWidth="800"
        CanResize="{Binding CanResize}"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="0"
        ExtendClientAreaToDecorationsHint="True"
        FontFamily="{Binding FontFamily}"
        Icon="{Binding WindowIconPath}"
        SizeToContent="WidthAndHeight"
        SystemDecorations="{Binding SystemDecorations}"
        Topmost="{Binding Topmost}"
        WindowStartupLocation="{Binding LocationOfMyWindow}"
        mc:Ignorable="d">
    <Window.KeyBindings>
        <KeyBinding Command="{Binding Copy}" Gesture="Ctrl+C" />
    </Window.KeyBindings>
    <Window.Styles>
        <Style Selector="Image">
            <Setter Property="Margin" Value="0,0,15,0" />
            <Setter Property="MaxHeight" Value="50" />
            <Setter Property="MaxWidth" Value="50" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style Selector="TextBox.styled">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="AcceptsReturn" Value="True" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="CaretBrush" Value="Transparent" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        </Style>
        <Style Selector="TextBox.styled:pointerover /template/ Border#border">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:pointerover /template/ Border#PART_BorderElement">
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:focus /template/ Border#border">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.styled:focus /template/ Border#PART_BorderElement">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style Selector="TextBox.header">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>
        <Style Selector="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="15 0 0 0" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="MinWidth" Value="75" />
        </Style>
        <Style Selector="TextBlock.hyperlink">
            <Setter Property="Foreground" Value="#3483eb" />
        </Style>
        <Style Selector="TextBlock.hyperlink:pointerover">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="TextDecorations" Value="Underline" />
            <Setter Property="Foreground" Value="#3496eb" />
        </Style>
    </Window.Styles>
    <Grid Margin="24" Classes="MsBoxStandardContainer">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="15" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0"
                   FontFamily="{Binding FontFamily}"
                   FontSize="20"
                   Text="{Binding ContentTitle}" />
        <!--  Icon  -->
        <TextBlock Grid.Row="1"
                   Grid.Column="0"
                   Margin="4,12,16,0"
                   FontFamily="{StaticResource SymbolThemeFontFamily}"
                   FontSize="36"
                   Foreground="#4CC2FF"
                   IsVisible="{Binding HasIcon}"
                   Text="{Binding ImageGlyph}" />
        <Grid Grid.Row="1"
              Grid.Column="1"
              Margin="0,12,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--  Bold text  -->
            <TextBox Grid.Row="0"
                     Classes="header styled"
                     FontFamily="{Binding FontFamily}"
                     IsVisible="{Binding HasHeader}"
                     Text="{Binding ContentHeader}" />
            <!--  Content text  -->
            <TextBox Name="ContentTextBox"
                     Grid.Row="1"
                     Classes="contentMessage styled"
                     FontFamily="{Binding FontFamily}"
                     IsVisible="{Binding !Markdown}"
                     Text="{Binding ContentMessage}" />
            <avalonia:MarkdownScrollViewer Grid.Row="1"
                                           IsVisible="{Binding Markdown}"
                                           Markdown="{Binding ContentMessage}" />
        </Grid>
        <!--  Input  -->
        <Grid Grid.Row="4"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Margin="0,0,0,15"
              IsVisible="{Binding IsInputVisible}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,15,0"
                       VerticalAlignment="Center"
                       FontFamily="{Binding FontFamily}"
                       IsVisible="{Binding IsInputVisible}"
                       Text="{Binding InputLabel}" />
            <TextBox Grid.Column="1"
                     Grid.ColumnSpan="2"
                     AcceptsReturn="{Binding IsInputMultiline}"
                     FontFamily="{Binding FontFamily}"
                     IsVisible="{Binding IsInputVisible}"
                     Text="{Binding InputValue, Mode=TwoWay}" />
        </Grid>
        <!--  Buttons  -->
        <StackPanel Grid.Row="5"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Stretch"
                    Orientation="Horizontal">
            <Button Name="OkButton"
                    Classes="button ok"
                    Command="{Binding ButtonClickCommand}"
                    CommandParameter="{Binding $self.Tag}"
                    Content="{Binding Text.Ok}"
                    IsDefault="True"
                    IsVisible="{Binding IsOkShowed}"
                    Tag="Ok" />
            <Button Name="YesButton"
                    Classes="button yes"
                    Command="{Binding ButtonClickCommand}"
                    CommandParameter="{Binding $self.Tag}"
                    Content="{Binding Text.Yes}"
                    IsDefault="True"
                    IsVisible="{Binding IsYesShowed}"
                    Tag="Yes" />
            <Button Classes="button no"
                    Command="{Binding ButtonClickCommand}"
                    CommandParameter="{Binding $self.Tag}"
                    Content="{Binding Text.No}"
                    IsCancel="True"
                    IsVisible="{Binding IsNoShowed}"
                    Tag="No" />
            <Button Classes="button abort"
                    Command="{Binding ButtonClickCommand}"
                    CommandParameter="{Binding $self.Tag}"
                    Content="{Binding Text.Abort}"
                    IsCancel="True"
                    IsVisible="{Binding IsAbortShowed}"
                    Tag="Abort" />
            <Button Classes="button cancel"
                    Command="{Binding ButtonClickCommand}"
                    CommandParameter="{Binding $self.Tag}"
                    Content="{Binding Text.Cancel}"
                    IsCancel="True"
                    IsVisible="{Binding IsCancelShowed}"
                    Tag="Cancel" />
        </StackPanel>
    </Grid>
</Window>
